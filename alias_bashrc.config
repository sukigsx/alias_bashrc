#!/bin/bash

#colores
#ejemplo: echo -e "${verde} La opcion (-e) es para que pille el color.${borra_colores}"

rojo="\e[0;31m\033[1m" #rojo
verde="\e[;32m\033[1m"
azul="\e[0;34m\033[1m"
amarillo="\e[0;33m\033[1m"
rosa="\e[0;35m\033[1m"
turquesa="\e[0;36m\033[1m"
borra_colores="\033[0m\e[0m" #borra colores

#esto es lo que muestra al cargar laterminal
echo " Comando ( opciones_alias ), Para gestionar tus alias."

opciones_alias(){
clear
echo ""
echo -e " ${verde}-${borra_colores} Opciones de alias_bashrc ${verde}-${borra_colores}"
echo ""
echo -e "${azul} actualizar_alias_bashrc${borra_colores}"
echo -e "${azul} desistalar_alias_bashrc${borra_colores}"
echo -e "${azul} listar_alias${borra_colores}"
echo -e "${azul} crear_alias${borra_colores}"
echo -e "${azul} borrar_alias${borra_colores}"
echo -e "${azul} editar_fichero_alias${borra_colores}"
echo -e "${azul} menu_alias${borra_colores}"
echo -e "${azul} backup_alias${borra_colores}"
echo -e "${azul} restore_alias${borra_colores}"
echo ""
}

#actualizar el script
actualizar_alias(){
clear
echo ""
echo -e "${verde} - ACTUALIZACION -${borra_colores}"
echo ""
#comprueba conexion

if ping -c1 google.com &>/dev/null
then
    conexion="SI"
    echo ""
    echo -e " Conexion a internet = ${verde}SI${borra_colores}"
else
    conexion="NO"
    echo ""
    echo -e " Conexion a internet = ${rojo}NO${borra_colores}"
    echo ""
    echo -e "${rojo} No se puede comprobar la actualizacion sin conexion a internet.${borra_colores}"
fi


archivo_local="alias_bashrc.config" # Nombre del archivo local
ruta_repositorio="https://github.com/sukigsx/alias_bashrc.git" #ruta del repositorio para actualizar y clonar con git clone

# Obtener la ruta del script
descarga="/home/$(whoami)/.config/alias_bashrc"
git clone $ruta_repositorio /tmp/comprobar >/dev/null 2>&1

diff $descarga/$archivo_local /tmp/comprobar/$archivo_local >/dev/null 2>&1


if [ $? = 0 ]
then
    #esta actualizado, solo lo comprueba
    echo ""
    echo -e " Actualizado = ${verde}SI${borra_colores}"
    echo ""
    chmod -R +w /tmp/comprobar
    rm -R /tmp/comprobar
    actualizado="SI"
else
    #hay que actualizar, comprueba y actualiza
    echo ""
    echo -e "${amarillo} EL script${borra_colores} $0 ${amarillo}NO esta actualizado.${borra_colores}"
    echo -e "${verde} Se procede a su actualizacion automatica.${borra_colores}"
    sleep 3
    mv /tmp/comprobar/$archivo_local $descarga
    chmod -R +w /tmp/comprobar
    rm -R /tmp/comprobar
    echo ""
    echo -e "${amarillo} El script se ha actualizado, es necesario reiniciar la terminal.${borra_colores}"
    echo -e ""
    read -p " Pulsa una tecla para continuar." p
    exit
fi
}


#actualizar el script
desistalar_alias_bashrc(){
while :
clear
echo ""
echo -e "${verde} - DESISTALACION -${borra_colores}"
echo ""
read -p " ¿ Desistalar alias_bashrc incluidos los alias creados (s/n)? " sn
do
case $sn in
        s|S)    #si
                #borra la carga source del .actualizar_alias_bashrc
                sed -i '/source \/home\/$(whoami)\/.config\/alias_bashrc\/alias_bashrc.config/d' /home/$(whoami)/.bashrc
                rm -r /home/$(whoami)/.config/alias_bashrc
                rm /home/$(whoami)/.bash_aliases >/dev/null 2>&1
                echo -e ""
                echo -e " Entrada source del .bashrc borrada = ${verde} SI ${borra_colores}"
                echo -e " Fichero de configuracion alias_bashrc.congig borrado = ${verde}SI${borra_colores}"
                echo -e " Alias de tu usuario $(whoami) borradas = ${verde}SI${borra_colores}"
                echo ""
                echo -e "${verde} Desistalacion completada.${borra_colores}"
                echo -e "${amarillo} Es necesario reiniciar el terminal.${borra_colores}"
                echo ""
                read -p " Pulsa una tecla o ctrl+c para salir."
                wmctrl -r :ACTIVE: -b remove,maximized_vert,maximized_horz >/dev/null 2>&1
                xdotool windowkill `xdotool getactivewindow` >/dev/null 2>&1
                echo ""
                exit
                ;;

        n|N)    #no
                echo ""
                echo -e "${verde} Perfecto, no se desistala nada.${borra_colores}"
                echo ""
                break
                ;;

        *)      echo "";
                echo -e " ${amarillo}Respuesta imbalida ( s/n ) ${borra_colores}";
                echo -e " ${amarillo}PRESIONA ENTER PARA CONTINUAR ........${borra_colores}";
                echo "";
                read pause;;

esac
done

}

#listar_alias
listar_alias(){
clear
echo ""
echo -e "${verde} - LISTAR ALIAS -${borra_colores}"
# Verificar si el archivo .bash_aliases existe y no está vacío
if [ ! -f /home/$(whoami)/.bash_aliases ] || [ ! -s /home/$(whoami)/.bash_aliases ]; then
    echo ""
    echo -e "${amarillo} No hay alias para mostrar.${borra_colores}"
    echo ""
    read -p " Pulsa una tecla para cotinuar." p
else
    # Mostrar los aliases disponibles en .bash_aliases
    echo ""
    echo -e " Listado de alias de $(whoami)."
    echo -e "${azul}"
    cat /home/$(whoami)/.bash_aliases
    echo -e "${borra_colores}"
fi
echo ""

}


#crear_alias
crear_alias(){
clear
echo ""
echo -e "${verde} - CREAR ALIAS -${borra_colores}"
# Pedir al usuario el alias y el comando
echo ""
read -p " Nombre del alias: " alias_name
read -p " Comando para el alias $alias_name: " command

# Añadir el alias al archivo .bash_aliases
echo "alias $alias_name='$command'" >> /home/$(whoami)/.bash_aliases
echo ""
echo -e " Alias creado (${verde}$alias_name=$command${borra_colores})."
echo ""
}


borrar_alias(){
    clear
    echo ""
    echo -e "${verde} - BORRAR ALIAS -${borra_colores}"

    local alias_file="/home/$(whoami)/.bash_aliases"

    # Verificar si el archivo .bash_aliases existe y no está vacío
    if [ grep -oP "alias\s+\K\w+(?=\=)" "$alias_file" ]; then
    #if [ ! -f "$alias_file" ] || [ ! -s "$alias_file" ]; then
        echo ""
        echo -e "${amarillo} No hay alias para mostrar.${borra_colores}"
        echo ""
        return
    fi

    # Mostrar los aliases disponibles
    echo ""
    echo -e " Alias disponibles de ${verde}$(whoami)${borra_colores}:"
    echo ""
    grep -oP "alias\s+\K\w+(?=\=)" "$alias_file"
    echo ""

    # Pedir al usuario los aliases a eliminar
    read -p " Introduce los aliases que quieres eliminar (separados por espacio): " aliases_to_remove
    echo ""

    # Convertir en array
    aliases_array=($aliases_to_remove)

    for alias_name in "${aliases_array[@]}"; do
        # Verificar si el alias existe
        if grep -q "^alias $alias_name=" "$alias_file"; then
            sed -i "/^alias $alias_name=/d" "$alias_file"
            echo -e "Alias ${verde}'$alias_name'${borra_colores} eliminado correctamente."
        else
            echo -e "${rojo}El alias '${alias_name}' no existe.${borra_colores}"
        fi
    done

    echo ""
}

#editar_fichero_alias
editar_fichero_alias(){
clear
echo ""
echo -e "${verde} - EDITAR FICHERO ALIAS -${borra_colores}"
if [ ! -f /home/$(whoami)/.bash_aliases ] || [ ! -s /home/$(whoami)/.bash_aliases ]; then
    echo ""
    echo -e "${amarillo} No hay alias para mostrar.${borra_colores}"
    echo ""
else
    nano /home/$(whoami)/.bash_aliases
fi
echo ""
}

#menu_alias
menu_alias(){
clear
echo ""
echo -e "${verde} - MENU ALIAS -${borra_colores}"
if [ ! -f /home/$(whoami)/.bash_aliases ] || [ ! -s /home/$(whoami)/.bash_aliases ]; then
    echo ""
    echo -e "${amarillo} No hay alias para mostrar.${borra_colores}"
    echo ""
else
    # Lee el contenido del archivo y utiliza fzf para seleccionar un alias
    nombre_alias=$(cat /home/$(whoami)/.bash_aliases | grep -oP "(?<=alias\s)\w+" | fzf --height 80% --reverse --header="Selecciona un alias:" --no-info)
    # Utiliza una expresión regular para extraer el comando del alias seleccionado
    if [[ $(cat /home/$(whoami)/.bash_aliases) =~ alias\ $nombre_alias=\'([^\']+)\' ]]; then
        # Captura el comando dentro de las comillas simples en una variable
        comando=${BASH_REMATCH[1]}

        # Imprime el nombre del alias y el comando
        echo -e "${verde} Ejecutando alias:${borra_colores} $nombre_alias"
        echo ""
        sleep 1

        # Ejecuta el comando
        eval "$comando"
        echo ""
    else
        echo ""
        echo -e "${rojo} No se encontró un alias correspondiente al nombre seleccionado.${borra_colores}"
        echo ""
    fi
fi
}


#backup_alias
backup_alias(){
clear
echo ""
echo -e "${verde} - BACKUP ALIAS -${borra_colores}"
if [ ! -f /home/$(whoami)/.bash_aliases ] || [ ! -s /home/$(whoami)/.bash_aliases ]; then
    echo ""
    echo -e "${amarillo} No hay alias para realizar el backup.${borra_colores}"
    echo ""
else
    echo ""
    echo -e " Se guardara una copia de tus alias en:"
    echo -e " /home/$(whoami)/backup_alias"
    mkdir /home/$(whoami)/backup_alias >/dev/null 2>&1
    cp /home/$(whoami)/.bash_aliases /home/$(whoami)/backup_alias/alias_$(whoami).backup >/dev/null 2>&1
    echo ""
    echo -e "${verde} Backup creado con exito.${borra_colores}"
fi
echo ""
}

#restore_alias
restore_alias(){
FICHERO="alias_$(whoami).backup"
BACKUP_DIR="/home/$(whoami)/backup_alias"
DESTINO="/home/$(whoami)/.bash_aliases"  # destino donde se restaura

clear
echo ""
echo -e "${verde} - RESTORE ALIAS -${borra_colores}"
echo ""
echo "Buscando copia de seguridad en: $BACKUP_DIR"

# Ruta completa del posible backup
BACKUP_FILE="$BACKUP_DIR/$FICHERO"

# Verificamos si el backup existe
if [[ -f "$BACKUP_FILE" ]]; then
    echo " Copia de seguridad encontrada: $BACKUP_FILE"
    echo " Restaurando fichero en $DESTINO..."
    cp "$BACKUP_FILE" "$DESTINO" && echo "✅ Restauración completada."
else
    echo "⚠ No se encontró el backup en $BACKUP_DIR."
    read -rp " Introduce la ruta completa del fichero de respaldo: " RUTA_USUARIO

    # Comprobamos que la ruta no esté vacía
    if [[ -z "$RUTA_USUARIO" ]]; then
        echo " No se introdujo ninguna ruta. Cancelando."
    fi

    # Comprobamos si el fichero existe realmente
    if [[ -f "$RUTA_USUARIO" ]]; then
        echo " Fichero encontrado en $RUTA_USUARIO"
        echo " Restaurando fichero en $DESTINO..."
        cp "$RUTA_USUARIO" "$DESTINO" && echo "✅ Restauración completada."
    else
        echo " Error: el fichero '$RUTA_USUARIO' no existe o la ruta es incorrecta."
    fi
fi
echo ""
}

